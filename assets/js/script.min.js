let userHemisphere="northern",todayDateTime=moment(),userDate=todayDateTime.format("MMM"),userTime=todayDateTime.format("H"),selectedMonth=todayDateTime.format("MMM").toLowerCase(),selectedHour=todayDateTime.format("H"),selectedAnimal="fish",selectedHemisphere=userHemisphere,selectedFishLocation="all",selectedBugLocation="all";String.prototype.toTitleCase=function(){return this.replace(/(?:^|\s)\w/g,function(e){return e.toUpperCase()})},Number.prototype.addCommas=function(){return this.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")};const compareTimes=(e,t)=>{if(e>t){if(selectedHour>=12){if(e<=selectedHour&&t+24>selectedHour)return!0}else if(e-24<=selectedHour&&t>selectedHour)return!0}else if(e<=selectedHour&&t>selectedHour)return!0;return!1},buildMonthDisplay=e=>{if(12===e.length)return"All Year";{let t="",s={};return e.forEach((a,i)=>{s.position?void 0===e[i+1]?a.position!==s.position+1?t+=`${s.shortName.toTitleCase()}, ${a.shortName.toTitleCase()}`:t+=`${a.shortName.toTitleCase()}`:a.position!==s.position+1&&(t+=`${s.shortName.toTitleCase()}, ${a.shortName.toTitleCase()} - `):t+=`${a.shortName.toTitleCase()}${1===e.length?"":" - "}`,s=a}),t}},buildTimeDisplay=(e,t)=>{let s,a,i;return s=e===t?"All day":`${a=e>12?e-12+"PM":e+"AM"} - ${i=t>12?t-12+"PM":t+"AM"}`},init=()=>{$("#js-select-date").val(userDate.toLowerCase()),$("#js-select-time").val(userTime),$(".modal").css("visibility","hidden"),$("#js-select-species").change(function(){"fish"===(selectedAnimal=$(this).val())?($("#js-locations-fish").removeClass("hidden"),$("#js-locations-bugs").addClass("hidden")):($("#js-locations-fish").addClass("hidden"),$("#js-locations-bugs").removeClass("hidden")),getAnimals($(this).val())}),$("#js-select-date").change(function(){selectedMonth=$("#js-select-date").val(),getAnimals(selectedAnimal)}),$("#js-select-time").change(function(){selectedHour=$(this).val(),getAnimals(selectedAnimal)}),$(".modal__radio-btn").change(function(){"hemisphere"===$(this).attr("name")?selectedHemisphere=$(this).val():"loc-fish"===$(this).attr("name")?selectedFishLocation=$(this).val():selectedBugLocation=$(this).val(),getAnimals(selectedAnimal)}),$(".btn-modal-show").click(function(){$("body").addClass("body--modal-open"),$(".modal").css("visibility","visible"),$(".modal").removeClass("modal--hidden"),$(".modal__content").removeClass("modal__content--hidden")}),$(".js-close-modal").click(function(){$(".modal").addClass("modal--hidden"),$(".modal__content").addClass("modal__content--hidden"),setTimeout(()=>{$(".modal").css("visibility","hidden"),$("body").removeClass("body--modal-open")},500)}),$(".modal__content").click(function(e){e.stopPropagation()}),getAnimals(selectedAnimal)},getAnimals=e=>{let t=[];"fish"===e?listFish.forEach(e=>{e.months[selectedHemisphere].forEach(s=>{s.shortName===selectedMonth&&t.push(e)})}):listBugs.forEach(e=>{e.months[selectedHemisphere].forEach(s=>{s.shortName===selectedMonth&&t.push(e)})});let s=t.filter(e=>e.startTimes?compareTimes(e.startTimes[0],e.endTimes[0])||compareTimes(e.startTimes[1],e.endTimes[1]):e.startTime===e.endTime||compareTimes(e.startTime,e.endTime));if("fish"===selectedAnimal){let e;e="all"===selectedFishLocation?s:s.filter(e=>e.location.name===selectedFishLocation),updateResultsOverview(e.length),renderAnimals(e.sort((e,t)=>e.name.toLowerCase()<t.name.toLowerCase()?-1:e.name.toLowerCase()>t.name.toLowerCase()?1:0))}else{let e;e="all"===selectedBugLocation?s:s.filter(e=>e.location.name===selectedBugLocation),updateResultsOverview(e.length),renderAnimals(e.sort((e,t)=>e.name.toLowerCase()<t.name.toLowerCase()?-1:e.name.toLowerCase()>t.name.toLowerCase()?1:0))}},renderAnimals=e=>{$("#js-display-results").empty(),e.forEach(e=>{let t=$('<div class="card">'),s=$('<div class="card__header">'),a=$('<img class="card__icon lazy-image">'),i=$('<div class="card__title-container">'),l=$('<p class="card__title">'),o=$('<p class="card__subtitle">');l.text(e.name.toTitleCase()),o.text(buildMonthDisplay(e.months[selectedHemisphere])),i.append(l,o),"fish"===selectedAnimal?a.attr("src","./assets/images/fish/fish_lqip.png"):a.attr("src","./assets/images/bugs/bugs_lqip.png"),a.attr("data-src",`./assets/images/${e.image}`),a.attr("alt",e.name),s.append(a,i);let n,r,d=$('<div class="card__details">'),c=$('<div class="card__detail">'),m=$('<div class="card__detail">'),h=$('<div class="card__detail">'),p=$('<p class="detail__title detail__title--green">Time of day</p>'),u=$('<p class="detail__info detail__info--green">');e.startTimes?(n=$('<div class="detail__info-container">'),r=$('<p class="detail__subinfo">'),compareTimes(e.startTimes[0],e.endTimes[0])?(u.text(buildTimeDisplay(e.startTimes[0],e.endTimes[0])),r.text(buildTimeDisplay(e.startTimes[1],e.endTimes[1]))):(u.text(buildTimeDisplay(e.startTimes[1],e.endTimes[1])),r.text(buildTimeDisplay(e.startTimes[0],e.endTimes[0]))),n.append(u,r),c.append(p,n)):(u.text(buildTimeDisplay(e.startTime,e.endTime)),c.append(p,u));let _,g,f=$('<p class="detail__title detail__title--blue">Location</p>'),T=$('<p class="detail__info detail__info--blue">');T.text(e.location.name),e.location.sublocation?(_=$('<div class="detail__info-container">'),(g=$('<p class="detail__subinfo">')).text(e.location.sublocation),_.append(T,g),m.append(f,_)):m.append(f,T);let v=$('<p class="detail__title detail__title--gold">Selling Price</p>'),b=$('<div class="detail__info detail__info--gold detail__info--container">');e.sellPrice?b.html(`<i class="fas fa-star"></i><p>${e.sellPrice.addCommas()}</p>`):b.html('<i class="fas fa-star"></i><p>-</p>'),h.append(v,b),d.append(c,m,h),t.append(s,d),$("#js-display-results").append(t)}),initLazyImages()},updateResultsOverview=e=>{$("#js-results-num").text(e),$("#js-results-hemisphere").text(selectedHemisphere.toTitleCase()),"fish"===selectedAnimal?"all"===selectedFishLocation?$("#js-results-location").text("All Locations"):$("#js-results-location").text(selectedFishLocation):"all"===selectedBugLocation?$("#js-results-location").text("All Locations"):$("#js-results-location").text(selectedBugLocation)},initLazyImages=()=>{const e=document.querySelectorAll(".lazy-image"),t=new IntersectionObserver(e=>{e.forEach(e=>{e.isIntersecting&&(t.unobserve(e.target),e.target.src=e.target.dataset.src)})});e.forEach(e=>{t.observe(e)})};null!==localStorage.getItem("hemisphere")?(userHemisphere=localStorage.getItem("hemisphere"),selectedHemisphere=localStorage.getItem("hemisphere"),init()):navigator.geolocation&&navigator.geolocation.getCurrentPosition(e=>{userHemisphere=e.coords.latitude>=0?"northern":"southern",localStorage.setItem("hemisphere",e.coords.latitude>=0?"northern":"southern"),init()});